openapi: 3.1.0
info:
  title: Libreria API definition
  version: v1
servers:
- url: http://localhost:8080
  description: base server url
tags:
- name: Category
  description: Category management APIs
- name: Loan
  description: Loan management APIs
- name: Student
  description: Student management APIs
- name: Course
  description: Course management APIs
- name: Book
  description: Book management APIs
- name: Card
  description: Card management APIs
paths:
  /api/v1/card:
    get:
      tags:
      - get-all
      - Card
      summary: Retrieve all cards
      description: Retrieve all card objects. The response is a list of card objects.
      operationId: getAllTessere
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/AscParam'
        - $ref: '#/components/parameters/SortByParam'
      responses:
        "200":
          description: Retrieved all cards
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
    put:
      tags:
      - put
      - Card
      summary: Modify card
      description: Modify a card object by specifying its id
      operationId: editCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Card"
        required: true
      responses:
        "200":
          description: Card modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
        "400":
          description: Id type mismatch
        "404":
          description: Card not found
        "500":
          description: Data integrity violation
    post:
      tags:
      - post
      - Card
      summary: Add card
      description: Add a card object to the database
      operationId: addCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Card"
        required: true
      responses:
        "200":
          description: Card added to the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
        "500":
          description: Data integrity violation
  /api/v1/student:
    get:
      tags:
      - get-all
      - Student
      summary: Retrieve all students
      description: Retrieve all student objects. The response is a list of student
        objects
      operationId: getAll
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/AscParam'
        - $ref: '#/components/parameters/SortByParam'
      responses:
        "200":
          description: Retrieved all student
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      tags:
      - Student
      - put
      summary: Modify student
      description: Modify a student object by specifying its id
      operationId: editstudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
        required: true
      responses:
        "200":
          description: Student modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Student not found
        "500":
          description: Data integrity violation
    post:
      tags:
      - post
      - Student
      summary: Add student
      description: Add a student object to the database
      operationId: addstudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
        required: true
      responses:
        "200":
          description: Student added to the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "500":
          description: Data integrity violation
  /api/v1/loan:
    get:
      tags:
      - Loan
      - get-all
      summary: Retrieve all loans
      description: Retrieve all Loan objects. The response is a list of Loan objects
      operationId: getAll_1
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/AscParam'
        - $ref: '#/components/parameters/SortByParam'
      responses:
        "200":
          description: Retrieved all Loan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      tags:
      - Loan
      - put
      summary: Modify Loan
      description: Modify a Loan object by specifying its id
      operationId: editPrestito
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Loan"
        required: true
      responses:
        "200":
          description: Loan modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Loan not found
        "500":
          description: Data integrity violation
    post:
      tags:
      - post
      - Loan
      summary: Add Loan
      description: Add a Loan object to the database
      operationId: addPrestito
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Loan"
        required: true
      responses:
        "200":
          description: Loan added to the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "500":
          description: Data integrity violation
  /api/v1/book:
    get:
      tags:
      - Book
      - get-all
      summary: Retrieve all books
      description: Retrieve all Book objects. The response is a list of Book objects
      operationId: getAll_2
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/AscParam'
        - $ref: '#/components/parameters/SortByParam'
      responses:
        "200":
          description: Retrieved all Book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      tags:
      - Book
      - put
      summary: Modify Book
      description: Modify a Book object by specifying its id
      operationId: 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "200":
          description: Book modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Book not found
        "500":
          description: Data integrity violation
    post:
      tags:
      - post
      - Book
      summary: Add Book
      description: Add a Book object to the database
      operationId: addBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "200":
          description: Book added to the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "500":
          description: Data integrity violation
  /api/v1/course:
    get:
      tags:
      - get-all
      - Course
      summary: Retrieve all courses
      description: Retrieve all Course objects. The response is a list of Course objects
      operationId: getAll_3
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/AscParam'
        - $ref: '#/components/parameters/SortByParam'
      responses:
        "200":
          description: Retrieved all Course
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      tags:
      - Course
      - put
      summary: Modify Course
      description: Modify a Course object by specifying its id
      operationId: editCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Course"
        required: true
      responses:
        "200":
          description: Course modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Course not found
        "500":
          description: Data integrity violation
    post:
      tags:
      - post
      - Course
      summary: Add Course
      description: Add a Course object to the database
      operationId: addCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Course"
        required: true
      responses:
        "200":
          description: Course added to the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "500":
          description: Data integrity violation
  /api/v1/category:
    get:
      tags:
      - Category
      - get-all
      summary: Retrieve all categories
      description: Retrieve all Category objects. The response is a list of Category
        objects
      operationId: getAllCategorie
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
        - $ref: '#/components/parameters/AscParam'
        - $ref: '#/components/parameters/SortByParam'
      responses:
        "200":
          description: Retrieved all Category
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    put:
      tags:
      - Category
      - put
      summary: Modify Category
      description: Modify a Category object by specifying its id
      operationId: editCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: Category modified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Category not found
        "500":
          description: Data integrity violation
    post:
      tags:
      - Category
      - post
      summary: Add Category
      description: Add a Category object to the database
      operationId: addCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: Category added to the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "500":
          description: Data integrity violation
  /api/v1/card/{id}:
    get:
      tags:
      - get
      - Card
      summary: Retrieve card by id
      description: Retrieve a card object by specifying its id. The response is a
        card object
      operationId: getCardById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Found the card
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
        "400":
          description: Id type mismatch
        "404":
          description: Card not found
    delete:
      tags:
      - delete
      - Card
      summary: Delete by id
      description: Delete a card object by specifying its id
      operationId: removeCard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Card deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
        "400":
          description: Id type mismatch
        "404":
          description: card not found
        "500":
          description: Data integrity violation
  /api/v1/student/{id}:
    get:
      tags:
      - get
      - Student
      summary: Retrieve student by id
      description: Retrieve a student object by specifying its id. The response is
        a student object
      operationId: getstudentById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Student founddent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Student not found
    delete:
      tags:
      - Student
      - delete
      summary: Delete student by id
      description: Delete a student object by specifying its id
      operationId: deletestudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Student deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Student not found
        "500":
          description: Data integrity violation
  /api/v1/loan/{id}:
    get:
      tags:
      - Loan
      - get
      summary: Retrieve Loan by id
      description: Retrieve a Loan object by specifying its id. The response is a
        Loan object
      operationId: getLoanById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Loan found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Loan not found
    delete:
      tags:
      - Loan
      - delete
      summary: Delete Loan by id
      description: Delete a Loan object by specifying its id
      operationId: deletePrestito
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Loan deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Loan not found
        "500":
          description: Data integrity violation
  /api/v1/book/{id}:
    get:
      tags:
      - Book
      - get
      summary: Retrieve Book by id
      description: Retrieve a Book object by specifying its id. The response is a
        Book object
      operationId: getBookById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Book found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Book not found
    delete:
      tags:
      - Book
      - delete
      summary: Delete Book by id
      description: Delete a Book object by specifying its id
      operationId: deleteBook
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Book deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Book not found
        "500":
          description: Data integrity violation
  /api/v1/course/{id}:
    get:
      tags:
      - get
      - Course
      summary: Retrieve Course by id
      description: Retrieve a Course object by specifying its id. The response is
        a Course object
      operationId: getCourseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Course found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Course not found
    delete:
      tags:
      - Course
      - delete
      summary: Delete Course by id
      description: Delete a Course object by specifying its id
      operationId: deleteCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Course deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Course not found
        "500":
          description: Data integrity violation
  /api/v1/category/{id}:
    get:
      tags:
      - Category
      - get
      summary: Retrieve Category by id
      description: Retrieve a Category object by specifying its id. The response is
        a Category object
      operationId: getCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Category found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Category not found
    delete:
      tags:
      - Category
      - delete
      summary: Delete Category by id
      description: Delete a Category object by specifying its id
      operationId: removeCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Category deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Id type mismatch
        "404":
          description: Category not found
        "500":
          description: Data integrity violation
components:
  schemas:
    Card:
      type: object
      properties:
        id:
          type: integer
          format: int64
        releaseDate:
          type: string
          format: date
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        classe:
          type: string
        email:
          type: string
        Card:
          $ref: "#/components/schemas/Card"
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        books:
          type: array
          items:
            $ref: "#/components/schemas/Book"
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        year:
          type: integer
          format: int32
        category:
          $ref: "#/components/schemas/Category"
        title:
          type: string
        author:
          type: string
    Loan:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        student:
          $ref: "#/components/schemas/Student"
        Book:
          $ref: "#/components/schemas/Book"
    Course:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        descrizione:
          type: string
        studenti:
          type: array
          items:
            $ref: "#/components/schemas/Student"
          uniqueItems: true
  parameters:
    PageParam:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0
    SizeParam:
      name: size
      in: query
      required: false
      schema:
        type: integer
        default: 5
    AscParam:
      name: ascending
      in: query
      required: false
      schema:
        type: boolean
        default: true
    SortByParam:
      name: sortBy
      in: query
      required: false
      schema:
        type: string
        default: id

